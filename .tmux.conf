# -----------------------------------------------------------------------------
# This config is targeted for tmux 3.0+.
#
# Read the "Plugin Manager" section (bottom) before trying to use this config!
# -----------------------------------------------------------------------------

# -----------------------------------------------------------------------------
# Global options
# -----------------------------------------------------------------------------

# Set a new prefix / leader key as Vim uses C-b
set-option -g prefix C-a
bind-key C-a last-window

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable
setw -g aggressive-resize on

# Remove delay when switching between Vim modes
set -s escape-time 0

# Enable color support inside of tmux
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"

# Ensure window titles get renamed automatically
setw -g automatic-rename

# Ensure window index numbers get reordered on delete
set-option -g renumber-windows on

# Start windows and panes index at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Enable full mouse support
set -g mouse on

set -g status-interval 1
set -g status-justify centre
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

# Status bar
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 2\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'set -g status-utf8 on'

# -----------------------------------------------------------------------------
# Colors
# -----------------------------------------------------------------------------

set -g status-style bg=colour235,fg=colour136,default # bg=base02, fg=yellow

# Pane border
set -g pane-border-style fg=colour235 #fg=base02
set -g pane-active-border-style fg=colour240 #fg=base01

# Message text
set -g message-style bg=colour235,fg=colour166 # bg=base02, fg=orange

# Pane number display
set -g display-panes-active-colour colour33 #blue
set -g display-panes-colour colour166 #orange

# Default window title colors
setw -g window-status-style fg=colour244,bg=default,dim # fg=base0

# Active window title colors
setw -g window-status-current-style fg=colour166,bg=default,bright # fg=orange

# Clock
setw -g clock-mode-colour green #green

# -----------------------------------------------------------------------------
# Key bindings
# -----------------------------------------------------------------------------

# Reload the tmux config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf Config reloaded.."

# Fix pane_current_path on new window and splits
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind c; bind c new-window -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" "unbind '\"'; bind '\"' split-window -v -c '#{pane_current_path}'"
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind v; bind v split-window -h -c "#{pane_current_path}"'
if-shell "test '#{$TMUX_VERSION_MAJOR} -gt 1 -o \( #{$TMUX_VERSION_MAJOR} -eq 1 -a #{$TMUX_VERSION_MINOR} -ge 8 \)'" 'unbind "%"; bind % split-window -h -c "#{pane_current_path}"'

# Set window split
bind-key b split-window -v
bind-key v split-window -h

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on

# Move around panes with ALT + arrow keys.
bind-key -n M-Up select-pane -U
bind-key -n M-Left select-pane -L
bind-key -n M-Down select-pane -D
bind-key -n M-Right select-pane -R

# Set to main-horizontal, 66% height for main pane
bind m run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-horizontal -p 66"

# Set to main-vertical, 50% width for main pane
bind M run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 50"

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# Vi copypaste mode
set-window-option -g mode-keys vi
if-shell "test '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -ge 4 \)'" 'bind-key -Tcopy-mode-vi v send -X begin-selection; bind-key -Tcopy-mode-vi y send -X copy-selection-and-cancel'
if-shell '\( #{$TMUX_VERSION_MAJOR} -eq 2 -a #{$TMUX_VERSION_MINOR} -lt 4\) -o #{$TMUX_VERSION_MAJOR} -le 1' 'bind-key -t vi-copy v begin-selection; bind-key -t vi-copy y copy-selection'

bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# Order tmux session by name
bind s choose-tree -sZ -O name

# -----------------------------------------------------------------------------
# Plugin Manager - https://github.com/tmux-plugins/tpm
# If you didn't use my dotfiles install script you'll need to:
#   Step 1) git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#   Step 2) Reload tmux if it's already started with `r
#   Step 3) Launch tmux and hit `I (capital i) to fetch any plugins
# -----------------------------------------------------------------------------

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @continuum-restore 'on'

# Initialize TPM (keep this line at the very bottom of your tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
